class Solution {
public:
    vector<vector<int>> dp;

    int fun(vector<vector<int>> &arr, int n, int last) {
        // Base Case
        if (n == 0) {
            int maxi = 0;
            for (int i = 0; i < 3; i++) {
                if (i != last) {
                    maxi = max(maxi, arr[0][i]);
                }
            }
            return maxi;
        }

        // Check memo
        if (dp[n][last] != -1) {
            return dp[n][last];
        }

        int maxi = 0;
        for (int i = 0; i < 3; i++) {
            if (i != last) {
                int points = arr[n][i] + fun(arr, n - 1, i);
                maxi = max(maxi, points);
            }
        }

        return dp[n][last] = maxi;
    }

    int maximumPoints(vector<vector<int>>& arr) {
        int n = arr.size();
        dp.assign(n, vector<int>(4, -1));
        return fun(arr, n - 1, 3); // last=3 means "no previous task"
    }
};
