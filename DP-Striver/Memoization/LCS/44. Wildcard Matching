class Solution {
public:
    vector<vector<int>> dp;

    bool fun(int i, int j, string &p, string &s) {

        if (i < 0 && j < 0) return true;
        if (i < 0 && j >= 0) return false;
        if (j < 0 && i >= 0) {
            for (int k = 0; k <= i; k++) {
                if (p[k] != '*') return false;
            }
            return true;
        }

        if (dp[i][j] != -1) return dp[i][j];

        if (p[i] == s[j] || p[i] == '?')
            return dp[i][j] = fun(i - 1, j - 1, p, s);

        if (p[i] == '*')
            return dp[i][j] = fun(i - 1, j, p, s) || fun(i, j - 1, p, s);

        return dp[i][j] = false;
    }

    bool isMatch(string s, string p) {
        int n = s.size(), m = p.size();
        dp.assign(m, vector<int>(n, -1));
        return fun(m - 1, n - 1, p, s);
    }
};
