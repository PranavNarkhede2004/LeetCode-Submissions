class Solution {
  public:
    vector<vector<int>> dp;
    int fun(int ind,vector<int>& arr,int target){
        if (ind == 0) {
            if (target == 0 && arr[0] == 0) return 2;  
            if (target == 0) return 1;                 
            if (target == arr[0]) return 1;           
            return 0;
        }
        if(ind<0 || target<0) return 0;
        if(dp[ind][target]!=-1){
            return dp[ind][target];
        }else{
                int not_take=fun(ind-1,arr,target);
                int take=0;
                if(arr[ind]<=target){
                    take= fun(ind-1,arr,target-arr[ind]);
                }
                return dp[ind][target]=take+not_take;            
        }

    }
    int perfectSum(vector<int>& arr, int target) {
        // code here
        dp.assign(arr.size(),vector<int> (target+1,-1));
        return fun(arr.size()-1,arr,target);
        
    }
};