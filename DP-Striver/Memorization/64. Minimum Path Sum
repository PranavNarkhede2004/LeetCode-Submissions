class Solution {
public:
    vector<vector<int>> dp;
    int fun(int m,int n,vector<vector<int>>& grid){
        if(m==0 && n==0) return grid[0][0];
        if(m<0 || n<0) return 400000;
        if(dp[m][n]!=-1){
            return dp[m][n];
        }else
        return dp[m][n]=min(grid[m][n]+fun(m-1,n,grid),grid[m][n]+fun(m,n-1,grid));
    }
    int minPathSum(vector<vector<int>>& grid) {
        int m=grid.size();
        int n=grid[0].size();
        dp.assign(m,vector<int> (n,-1));
        return fun(m-1,n-1,grid);
    }
};