class Solution {
  public:
    int totalWays(int m, int n, vector<vector<int>>& grid) {
        const int mod = 1e9+7;
        vector<vector<long long>> dp(m, vector<long long>(n, 0));

        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j] == 1){   // obstacle
                    dp[i][j] = 0;
                    continue;
                }

                if(i==0 && j==0){
                    dp[i][j] = 1;
                    continue;
                }

                long long down = 0, right = 0;
                if(i > 0) down = dp[i-1][j];
                if(j > 0) right = dp[i][j-1];

                dp[i][j] = (down + right) % mod;
            }
        }
        return dp[m-1][n-1];
    }
};
