class Solution {
public:
    int maxProfit(int k1, vector<int>& prices) {
        int n = prices.size();
        if (n == 0 || k1 == 0) return 0;

        vector<vector<int>> next(2, vector<int>(k1 + 1, 0)), curr(2, vector<int>(k1 + 1, 0));

        for (int i = n - 1; i >= 0; i--) {
            for (int j = 0; j <= 1; j++) {
                for (int k = 1; k <= k1; k++) {
                    if (j == 0) {
                        curr[j][k] = max(-prices[i] + next[1][k], next[0][k]);
                    } else {
                        curr[j][k] = max(prices[i] + next[0][k - 1], next[1][k]);
                    }
                }
            }
            next = curr;
        }
        return next[0][k1];
    }
};
