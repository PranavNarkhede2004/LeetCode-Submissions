class Solution {
public:
    int maximumPoints(vector<vector<int>>& arr) {
        int n = arr.size();
        vector<vector<int>> dp(n, vector<int>(4));

        // Base case
        dp[0][0] = max(arr[0][1], arr[0][2]);
        dp[0][1] = max(arr[0][0], arr[0][2]);
        dp[0][2] = max(arr[0][0], arr[0][1]);
        dp[0][3] = max({arr[0][0], arr[0][1], arr[0][2]});

        // Fill dp
        for (int i = 1; i < n; i++) {         
            for (int j = 0; j <= 3; j++) {  
                int maxi = 0;                 
                for (int k = 0; k < 3; k++) { 
                    if (k != j) {
                        int points = dp[i-1][k] + arr[i][k];
                        maxi = max(maxi, points);
                    }
                }
                dp[i][j] = maxi;
            }
        }

        return dp[n-1][3];
    }
};
