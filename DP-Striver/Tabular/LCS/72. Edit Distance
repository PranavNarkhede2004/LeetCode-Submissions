class Solution {
public:
    vector<vector<int>> dp;
    int fun(int i,int j, string &s1,string &s2){
        if(i<0) return j+1;
        if(j<0) return i+1;

        if(dp[i][j]!=-1) return dp[i][j];
        if(s1[i]==s2[j]){
            return dp[i][j]=fun(i-1,j-1,s1,s2);
        }else{
            int insert=1+fun(i,j-1,s1,s2);
            int deletee=1+fun(i-1,j,s1,s2);
            int replace=1+fun(i-1,j-1,s1,s2);
            return dp[i][j]=min(insert,min(deletee,replace));
        }
    }
    int minDistance(string s1, string s2) {
        int n=s1.length(),m=s2.length();
        dp.assign(n+1,vector<int>(m+1,-1));
        return fun(n-1,m-1,s1,s2);
    }
};