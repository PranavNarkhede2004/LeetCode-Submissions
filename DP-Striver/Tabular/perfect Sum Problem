class Solution {
public:
    int mod = 1e9+7;

    int perfectSum(vector<int>& arr, int target) {
        int n = arr.size();
        vector<vector<int>> dp(n, vector<int>(target+1, 0));

        // Base case for first element
        if (arr[0] == 0) dp[0][0] = 2; // take or not take
        else dp[0][0] = 1;

        if (arr[0] != 0 && arr[0] <= target) dp[0][arr[0]] = 1;

        // Fill DP
        for (int i = 1; i < n; i++) {
            for (int j = 0; j <= target; j++) {
                int notTake = dp[i-1][j];
                int take = 0;
                if (j >= arr[i]) take = dp[i-1][j - arr[i]];
                dp[i][j] = (take + notTake) % mod;
            }
        }

        return dp[n-1][target];
    }
};
