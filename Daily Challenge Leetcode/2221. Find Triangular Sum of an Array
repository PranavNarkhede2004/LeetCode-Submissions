class Solution {
public:
    // Compute n-th row of Pascal's triangle modulo 10
    vector<int> printNthRowMod10(int n) {
        vector<int> ans(n + 1, 0);
        ans[0] = 1; // C(n,0) = 1
        for (int i = 1; i <= n; i++) {
            // update backwards to avoid overwriting
            for (int j = i; j > 0; j--) {
                ans[j] = (ans[j] + ans[j - 1]) % 10;
            }
        }
        return ans;
    }

    int triangularSum(vector<int>& nums) {
        int n = nums.size();
        if (n == 1) return nums[0] % 10;

        vector<int> pascal = printNthRowMod10(n - 1);

        int sum = 0;
        for (int i = 0; i < n; i++) {
            sum = (sum + pascal[i] * (nums[i] % 10)) % 10;
        }
        return sum;
    }
};
