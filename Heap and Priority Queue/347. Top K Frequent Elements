class Solution {
public:
    struct cmp{
        bool operator()(const pair<int,int> &a,const pair<int,int> &b)const{
            return a.second>b.second;
        }
    };
    vector<int> topKFrequent(vector<int>& nums, int k) {
        priority_queue<pair<int,int>,vector<pair<int,int>>,cmp> pq;
        unordered_map<int,int> mp;
        for(int i=0;i<nums.size();i++){
            mp[nums[i]]++;
        }
        for(auto &p:mp){
            pq.push({p.first,p.second});
            //>k i.e k+1
            if(pq.size()>k){
                pq.pop();
            }
            
        }
        vector<int> ans;
        while(!pq.empty()){
            ans.push_back(pq.top().first);
            pq.pop();
        }
        return ans;
    }
  
    

};