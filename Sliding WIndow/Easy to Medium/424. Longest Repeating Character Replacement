// class Solution {
// public:
//     int characterReplacement(string s, int k) {
//        int n=s.length(),l=0,r=0;
//         vector<int> hash(26,0);
//         int len=0,maxfreq=0,maxlen=0;
//         while(r<n){
//             hash[s[r]-'A']++;
//             maxfreq=0;
//            for(int i=0;i<26;i++){
//             maxfreq=max(maxfreq,hash[i]);
//            }
//             while((r-l+1)-maxfreq>k){
//                 hash[s[l]-'A']--;
//                 l++;
//                 maxfreq=0;
//                 for(int i=0;i<26;i++){
//                     maxfreq=max(maxfreq,hash[i]);
//                 }
//             }
//                 len=r-l+1;
//                 maxlen=max(len,maxlen);
            
//             r++;
            
//         }
//         return maxlen;
//     }
// };

class Solution {
public:
    int characterReplacement(string s, int k) {
       int n=s.length(),l=0,r=0;
        vector<int> hash(26,0);
        int len=0,maxfreq=0,maxlen=0;
        while(r<n){
            hash[s[r]-'A']++;
            maxfreq=max(maxfreq,hash[s[r]-'A']);

           if((r-l+1)-maxfreq>k){
                hash[s[l]-'A']--;
                l++;
           } 
           if((r-l+1)-maxfreq<=k){
            maxlen=max(r-l+1,maxlen);
           }
           r++;
           
           
        }
        return maxlen;
    }
};