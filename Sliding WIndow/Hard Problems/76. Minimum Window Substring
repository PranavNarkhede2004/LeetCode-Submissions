class Solution {
public:
    string minWindow(string s, string t) {
        int n1 = s.length(), n2 = t.length();
        if (n2 > n1) return "";

        unordered_map<char,int> mp;
        for (int i = 0; i < n2; i++) {
            mp[t[i]]++;
        }

        int l = 0, r = 0;
        int cnt = 0;
        int minlen = INT_MAX, sInd = 0;

        while (r < n1) { 
            if (mp[s[r]] > 0) {
                cnt++;
            }
            mp[s[r]]--;  
       

            while (cnt == n2) {
                if ((r - l+1) < minlen) {
                    minlen = r - l+1;
                    sInd = l;
                }
                mp[s[l]]++;
                if (mp[s[l]] > 0) {
                    cnt--;
                }
                l++;
            }
            r++;
        }

        return (minlen == INT_MAX) ? "" : s.substr(sInd, minlen); // âœ… proper return
    }
};
